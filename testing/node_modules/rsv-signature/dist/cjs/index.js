"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const bn_js_1 = __importDefault(require("bn.js"));
const encUtils = __importStar(require("enc-utils"));
function exportRecoveryParam(recoveryParam) {
    return typeof recoveryParam === 'number'
        ? new bn_js_1.default(recoveryParam).add(new bn_js_1.default(27)).toString(16)
        : null;
}
exports.exportRecoveryParam = exportRecoveryParam;
function importRecoveryParam(v) {
    return v.trim() ? new bn_js_1.default(v, 16).sub(new bn_js_1.default(27)).toNumber() : undefined;
}
exports.importRecoveryParam = importRecoveryParam;
function serializeSignature(sig) {
    return encUtils.addHexPrefix(encUtils.padLeft(sig.r.toString(16), 64) +
        encUtils.padLeft(sig.s.toString(16), 64) +
        exportRecoveryParam(sig.recoveryParam) || '');
}
exports.serializeSignature = serializeSignature;
function deserializeSignature(sig, size = 64) {
    sig = encUtils.removeHexPrefix(sig);
    return {
        r: new bn_js_1.default(sig.substring(0, size), 'hex'),
        s: new bn_js_1.default(sig.substring(size, size * 2), 'hex'),
        recoveryParam: importRecoveryParam(sig.substring(size * 2, size * 2 + 2)),
    };
}
exports.deserializeSignature = deserializeSignature;
//# sourceMappingURL=index.js.map